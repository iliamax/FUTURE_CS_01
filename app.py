from flask import Flask, request, session, redirect, url_for, render_template, send_file
import pyotp
import qrcode
from io import BytesIO

app = Flask(__name__)
app.secret_key = 'your_secret_key'


users = {
    'ja2435@gmail.com': {
        'password': 'ja243@Mas',
        '2fa_secret': pyotp.random_base32()  # Unique TOTP secret for each user
    }
}


@app.route('/')
def home():
    return '''
        <h1>Welcome to the 2FA App</h1>
        <a href="/login">Login</a> | <a href="/register">Register</a>
    '''


@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']
        if email in users:
            return "User already exists!"
        secret = pyotp.random_base32()
        users[email] = {'password': password, '2fa_secret': secret}
        return f"Registration successful! Your 2FA secret is: {secret} (Save it!)"
    return '''
        <form method="post">
            <label>Email:</label><input type="email" name="email" required><br>
            <label>Password:</label><input type="password" name="password" required><br>
            <button type="submit">Register</button>
        </form>
    '''


@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        email = request.form['email']
        password = request.form['password']
        if email in users and users[email]['password'] == password:
            session['email'] = email
            return redirect(url_for('verify_2fa'))
        return "Invalid credentials!"
    return '''
        <form method="post">
            <label>Email:</label><input type="email" name="email" required><br>
            <label>Password:</label><input type="password" name="password" required><br>
            <button type="submit">Login</button>
        </form>
    '''


@app.route('/verify-2fa', methods=['GET', 'POST'])
def verify_2fa():
    email = session.get('email')
    if not email:
        return redirect(url_for('login'))

    if request.method == 'POST':
        otp = request.form['otp']
        secret = users[email]['2fa_secret']
        totp = pyotp.TOTP(secret)
        if totp.verify(otp):
            return "Login successful! 2FA verified."
        return "Invalid OTP! Try again."

    return '''
        <h2>Verify 2FA</h2>
        <p>Enter the OTP generated by your authenticator app:</p>
        <form method="post">
            <input type="text" name="otp" required>
            <button type="submit">Verify</button>
        </form>
    '''


@app.route('/generate-qr')
def generate_qr():
    email = session.get('email')
    if not email:
        return redirect(url_for('login'))

    secret = users[email]['2fa_secret']
    totp = pyotp.TOTP(secret)
    qr_uri = totp.provisioning_uri(email, issuer_name="2FA  App")
    img = qrcode.make(qr_uri)
    buf = BytesIO()
    img.save(buf)
    buf.seek(0)
    return send_file(buf, mimetype='image/png')


@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('home'))


if __name__ == "__main__":
    app.run(debug=True)
